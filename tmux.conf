# ==================================================== Version-specific commands========================================= #

# See: https://github.com/tmux/tmux/blob/master/CHANGES

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6- | sed 's/\\w$//')"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on \
    set -g message-fg red \
    set -g message-bg black \
    set -g message-attr bright \
    set -g window-status-bg default \
    set -g window-status-fg default \
    set -g window-status-current-attr bold \
    set -g window-status-current-bg blue \
    set -g window-status-current-fg white \
    set -g window-status-bell-fg red \
    set -g window-status-bell-bg black \
    set -g window-status-activity-fg white \
    set -g window-status-activity-bg black"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' " \
  set utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# bind-key syntax changed in 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
   # Selection / copy / paste \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line \
   bind-key -t vi-copy C-v rectangle-toggle \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
   # Selection / copy / paste \
   bind-key -T copy-mode-vi v   send -X begin-selection  # default is <space> \
   bind-key -T copy-mode-vi V   send -X select-line \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle  # default is C-v, or R in copy-mode (non-vi) \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"


# Disable all *-status-* settings below if using Powerline Plugin
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
    "set -g message-style fg=cyan,bg='#121212'; \
    set -g window-active-style fg='#AAAAAA',bg=default; \
    set -g window-style fg='#AAAAAA',bg=default; \
    set -g pane-active-border-style bg='#000000',fg=cyan; \
    set -g pane-border-style fg='#111111'; \
    set -g mode-style bg=cyan,fg='#121212'; \
    set -g status-style fg='#AAAAAA',bg='#121212'; \
    set -g clock-mode-colour green; \
    set -g display-panes-colour '#333333'; \
    set -g display-panes-active-colour white; \
    set -g window-status-current-style fg='#DDDDDD',bg=cyan,bold; \
    set -g window-status-bell-style fg=red,bg=black; \
    set -g window-status-activity-style fg=white,bg=red; \
    set -gw window-status-current-format '#{?pane_synchronized,#[bg=yellow]#[fg=black],}#I:#W#F';"

# =============================================== End Version Specific Commnads ======================================== #

# Settings needed for Powerline in Tmux
# run-shell "/home/jhollis/.local/bin/powerline-daemon -q"
# Uncomment below to turn on Powerline and disable all '*-status-*' above
# source "/home/jhollis/.local/lib64/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"

set -g default-terminal "tmux-256color"

# Toggle on/off status bar
bind-key -n C-Space set-option status

# Delay for showinng error message
set-option -g display-time 3000
# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

bind -n C-k clear-history

#Remove default binding for split vertical and horizontal
unbind %
bind | split-window -h
bind - split-window -v

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Status bar layout and config
# set -g status-left ""
set -g status-right-length 150
set -g status-right "#[fg=cyan]#(whoami) #[fg=yellow]#(uname -r)#[fg=white] #(date '+%D %r') #[fg=red]#(ip -4 a | grep -i inet | grep -v '127' | awk '{print $2}') #[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# next 2 lines are for scroll to work with tmux 2.x - Works in latest version (2.9a), but keeping here until tested with older versions of tmux
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

bind c command-prompt -p "Name: " "new-window -n %1"
#Copy and paste from tmux
bind C-c run "tmux show-buffer | xclip -i -selection clipboard > /dev/null"
bind C-v run "tmux set-buffer -- \"$(xclip -o selection clipboard > /dev/null)\"; tmux paste-buffer"

#Browsing URLs
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; split-window -l 10 "$SHELL -c 'urlview < /tmp/tmux-buffer'"

# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

#renumber windows when closed
set -g renumber-windows on
#make windows start at 1
set -g base-index 1
#make panes start at 1
set -g pane-base-index 1

# Remap zoom key to change color back to black when zoomed
# bind z resizep -Z \; if -F '#{window_zoomed_flag}' 'selectp -P bg="#000000"' 'selectp -P bg=default'
